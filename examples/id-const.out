#############
# Desugared #
#############

constructor Bool : Type.

constructor True : Bool.

constructor False : Bool.

constructor Pair : Type.

constructor P : (x :L Bool) -> (y :L Bool) -> Pair.

not : (x : Bool) -> Bool {
  not True ~> False
  not False ~> True
}

false : (x : Bool) -> Bool {
  forall (x : Bool).
    false x ~> False
}

true : (x : Bool) -> Bool {
  forall (x : Bool).
    true x ~> True
}

apply : (f : (x : Bool) -> Bool) -> (y : Bool) -> Bool {
  forall (y : Bool) (f : (x : Bool) -> Bool).
    apply f y ~> f y
}

main :L Pair {
  main ~> P (apply not (true False)) (apply false (true False))
}

#############
# Evarified #
#############

constructor Bool :0 Type.

constructor True :4 Bool.

constructor False :1 Bool.

constructor Pair :3 Type.

constructor P :2 (x :L Bool) -> (y :L Bool) -> Pair.

not :27 (x :28 Bool) -> Bool {
  not True ~> False
  not False ~> True
}

false :15 (x :16 Bool) -> Bool {
  forall (x :17 Bool).
    false x ~> False
}

true :31 (x :32 Bool) -> Bool {
  forall (x :33 Bool).
    true x ~> True
}

apply :5 (f :6 (x :7 Bool) -> Bool) -> (y :8 Bool) -> Bool {
  forall (y :9 Bool) (f :10 (x :11 Bool) -> Bool).
    apply f y ~> f y
}

main :L Pair {
  main ~> P (apply not (true False)) (apply false (true False))
}

Running erasure inference...

########################
# Inferred constraints #
########################

Sums:
  L ≥ Sum
    product  [I]
    product  [I]
  0 ≥ Sum
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
    product  [I]
  1 ≥ Sum
    product  []
    product  []
    product  [20, 21, 23]
    product  [19, 24, 26]
  2 ≥ Sum
    product  []
  3 ≥ Sum
    product  [I]
    product  [I]
  4 ≥ Sum
    product  []
    product  []
  5 ≥ Sum
    product  [20]
    product  [19]
  6 ≥ Sum
    product  [I]
  7 ≥ Sum
    product  [I]
  8 ≥ Sum
    product  [I]
  9 ≥ Sum
    product  [I]
    product  [14]
  10 ≥ Sum
    product  [I]
    product  [I]
    product  []
  11 ≥ Sum
    product  [I]
    product  [I]
  12 ≥ Sum
    product  [10]
  13 ≥ Sum
    product  [9]
  15 ≥ Sum
    product  [19, 25]
  16 ≥ Sum
    product  [I]
    product  [I]
  17 ≥ Sum
    product  [I]
  18 ≥ Sum
    product  [17]
  27 ≥ Sum
    product  [20, 22]
  28 ≥ Sum
    product  [I]
    product  [I]
  31 ≥ Sum
    product  [20, 21]
    product  [19, 24]
  32 ≥ Sum
    product  [I]
  33 ≥ Sum
    product  [I]
  34 ≥ Sum
    product  [33]

Maxes:
  L ≥ Max
    product  [20]
    product  [19]
  1 ≥ Max
    product  [L, 27]
  4 ≥ Max
    product  [L, 27]
  6 ≥ Max
    product  [12]
    product  [22]
    product  [25]
  7 ≥ Max
    product  [11]
    product  [28]
    product  [16]
  8 ≥ Max
    product  [13]
    product  [21]
    product  [24]
  11 ≥ Max
    product  [7]
    product  [14]
  12 ≥ Max
    product  [6]
  13 ≥ Max
    product  [8]
  14 ≥ Max
    product  [11]
  16 ≥ Max
    product  [18]
    product  [7]
  18 ≥ Max
    product  [16]
  19 ≥ Max
    product  [L]
  20 ≥ Max
    product  [L]
  21 ≥ Max
    product  [8]
  22 ≥ Max
    product  [6]
  23 ≥ Max
    product  [32]
  24 ≥ Max
    product  [8]
  25 ≥ Max
    product  [6]
  26 ≥ Max
    product  [32]
  28 ≥ Max
    product  [29]
    product  [30]
    product  [7]
  29 ≥ Max
    product  [L]
    product  [28]
  30 ≥ Max
    product  [L]
    product  [28]
  32 ≥ Max
    product  [34]
    product  [23]
    product  [26]
  34 ≥ Max
    product  [32]

#######################
# Deferred equalities #
#######################


  -> iteration 1
unsatisfiable
