#############
# Desugared #
#############

constructor Nat : Type.

constructor Z : Nat.

constructor S : (n : Nat) -> Nat.

constructor Fin : (_ : Nat) -> Type.

constructor FZ : (n : Nat) -> Fin (S n).

constructor FS : (n : Nat) -> (_ : Fin n) -> Fin (S n).

constructor Vect : (_ : Nat) -> (_ : Type) -> Type.

constructor VN : (a : Type) -> Vect Z a.

constructor VC : (n : Nat) -> (a : Type) -> (_ : a) -> (_ : Vect n a) -> Vect (S n) a.

constructor TT : (_ : Nat) -> Type.

constructor V : (n : Nat) -> (_ : Fin n) -> TT n.

constructor Lam : (n : Nat) -> (_ : TT (S n)) -> TT n.

constructor App : (n : Nat) -> (_ : TT n) -> (_ : TT n) -> TT n.

env : (m : Nat) -> (n : Nat) -> (_ : Vect m (TT n)) -> (_ : Fin m) -> TT n {
  forall (m : Nat) (n : Nat) (x : TT n) (xs : Vect m (TT n))
  env [S m] n (VC [m] [TT n] x xs) (FZ m) ~> x
  
  forall (m : Nat) (n : Nat) (x : TT n) (xs : Vect m (TT n)) (i : Fin m)
  env [S m] n (VC [m] [TT n] x xs) (FS m i) ~> env m n xs i
}

extendMap : (m : Nat) -> (n : Nat) -> (_ : (_ : Fin m) -> Fin n) -> (_ : Fin (S m)) -> Fin (S n) {
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> Fin n)
  extendMap m n f (FZ [m]) ~> FZ n
  
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> Fin n) (i : Fin m)
  extendMap m n f (FS [m] i) ~> FS n (f i)
}

mapVars : (m : Nat) -> (n : Nat) -> (_ : (_ : Fin m) -> Fin n) -> (_ : TT m) -> TT n {
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> Fin n) (i : Fin m)
  mapVars m n f (V [m] i) ~> V n (f i)
  
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> Fin n) (x : TT (S m))
  mapVars m n f (Lam [m] x) ~> Lam n (mapVars (S m) (S n) (extendMap m n f) x)
  
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> Fin n) (g : TT m) (x : TT m)
  mapVars m n f (App [m] g x) ~> App n (mapVars m n f g) (mapVars m n f x)
}

extendSubst : (m : Nat) -> (n : Nat) -> (_ : (_ : Fin m) -> TT n) -> (_ : Fin (S m)) -> TT (S n) {
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> TT n)
  extendSubst m n f (FZ [m]) ~> V (S n) (FZ n)
  
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> TT n) (i : Fin m)
  extendSubst m n f (FS [m] i) ~> mapVars n (S n) (FS n) (f i)
}

substVars : (m : Nat) -> (n : Nat) -> (_ : (_ : Fin m) -> TT n) -> (_ : TT m) -> TT n {
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> TT n) (i : Fin m)
  substVars m n f (V [m] i) ~> f i
  
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> TT n) (x : TT (S m))
  substVars m n f (Lam [m] x) ~> Lam n (substVars (S m) (S n) (extendSubst m n f) x)
  
  forall (m : Nat) (n : Nat) (f : (_ : Fin m) -> TT n) (g : TT m) (x : TT m)
  substVars m n f (App [m] g x) ~> App n (substVars m n f g) (substVars m n f x)
}

testTm : TT (S Z) {
  testTm  ~> App (S Z) (Lam (S Z) (App (S (S Z)) (V (S (S Z)) (FZ (S Z))) (V (S (S Z)) (FS (S Z) (FZ Z))))) (Lam (S Z) (App (S (S Z)) (V (S (S Z)) (FS (S Z) (FZ Z))) (V (S (S Z)) (FZ (S Z)))))
}

example1 : TT Z {
  example1  ~> substVars (S Z) Z (env (S Z) Z (VC Z (TT Z) (Lam Z (V (S Z) (FZ Z))) (VN (TT Z)))) testTm
}

substTop : (n : Nat) -> (_ : TT n) -> (_ : Fin (S n)) -> TT n {
  forall (n : Nat) (tm : TT n)
  substTop n tm (FZ [n]) ~> tm
  
  forall (n : Nat) (tm : TT n) (i : Fin n)
  substTop n tm (FS [n] i) ~> V n i
}

redex : (m : Nat) -> (_ : TT m) -> (_ : TT m) -> TT m {
  forall (m : Nat) (y : TT (S m)) (x : TT m)
  redex m (Lam [m] y) x ~> nf m (substVars (S m) m (substTop m (nf m x)) y)
  
  forall (m : Nat) (f' : TT m) (x : TT m)
  redex m f' x ~> App m f' (nf m x)
}

nf : (m : Nat) -> (_ : TT m) -> TT m {
  forall (m : Nat) (i : Fin m)
  nf m (V [m] i) ~> V m i
  
  forall (m : Nat) (x : TT (S m))
  nf m (Lam [m] x) ~> Lam m (nf (S m) x)
  
  forall (m : Nat) (f : TT m) (x : TT m)
  nf m (App [m] f x) ~> redex m f x
}

example2 : TT (S Z) {
  example2  ~> nf (S Z) testTm
}

constructor Result : Type.

constructor R : (x :R TT Z) -> (y :R TT (S Z)) -> Result.

main :R Result {
  main  ~> R example1 example2
}

#############
# Evarified #
#############

constructor Nat :25 Type.

constructor Z :57 Nat.

constructor S :31 (n :32 Nat) -> Nat.

constructor Fin :17 (_ :18 Nat) -> Type.

constructor FZ :13 (n :14 Nat) -> Fin (S n).

constructor FS :7 (n :8 Nat) -> (_ :9 Fin n) -> Fin (S n).

constructor Vect :54 (_ :55 Nat) -> (_ :56 Type) -> Type.

constructor VN :50 (a :51 Type) -> Vect Z a.

constructor VC :40 (n :41 Nat) -> (a :42 Type) -> (_ :43 a) -> (_ :44 Vect n a) -> Vect (S n) a.

constructor TT :33 (_ :34 Nat) -> Type.

constructor V :35 (n :36 Nat) -> (_ :37 Fin n) -> TT n.

constructor Lam :19 (n :20 Nat) -> (_ :21 TT (S n)) -> TT n.

constructor App :0 (n :1 Nat) -> (_ :2 TT n) -> (_ :4 TT n) -> TT n.

env :58 (m :59 Nat) -> (n :60 Nat) -> (_ :61 Vect m (TT n)) -> (_ :65 Fin m) -> TT n {
  forall (m :75 Nat) (n :74 Nat) (x :72 TT n) (xs :68 Vect m (TT n))
  env [S m] n (VC [m] [TT n] x xs) (FZ m) ~> x
  
  forall (m :96 Nat) (n :95 Nat) (x :93 TT n) (xs :89 Vect m (TT n)) (i :87 Fin m)
  env [S m] n (VC [m] [TT n] x xs) (FS m i) ~> env m n xs i
}

extendMap :143 (m :144 Nat) -> (n :145 Nat) -> (_ :146 (_ :147 Fin m) -> Fin n) -> (_ :150 Fin (S m)) -> Fin (S n) {
  forall (m :160 Nat) (n :159 Nat) (f :155 (_ :156 Fin m) -> Fin n)
  extendMap m n f (FZ [m]) ~> FZ n
  
  forall (m :174 Nat) (n :173 Nat) (f :169 (_ :170 Fin m) -> Fin n) (i :167 Fin m)
  extendMap m n f (FS [m] i) ~> FS n (f i)
}

mapVars :234 (m :235 Nat) -> (n :236 Nat) -> (_ :237 (_ :238 Fin m) -> Fin n) -> (_ :241 TT m) -> TT n {
  forall (m :251 Nat) (n :250 Nat) (f :246 (_ :247 Fin m) -> Fin n) (i :244 Fin m)
  mapVars m n f (V [m] i) ~> V n (f i)
  
  forall (m :269 Nat) (n :268 Nat) (f :264 (_ :265 Fin m) -> Fin n) (x :261 TT (S m))
  mapVars m n f (Lam [m] x) ~> Lam n (mapVars (S m) (S n) (extendMap m n f) x)
  
  forall (m :296 Nat) (n :295 Nat) (f :291 (_ :292 Fin m) -> Fin n) (g :289 TT m) (x :287 TT m)
  mapVars m n f (App [m] g x) ~> App n (mapVars m n f g) (mapVars m n f x)
}

extendSubst :184 (m :185 Nat) -> (n :186 Nat) -> (_ :187 (_ :188 Fin m) -> TT n) -> (_ :191 Fin (S m)) -> TT (S n) {
  forall (m :201 Nat) (n :200 Nat) (f :196 (_ :197 Fin m) -> TT n)
  extendSubst m n f (FZ [m]) ~> V (S n) (FZ n)
  
  forall (m :218 Nat) (n :217 Nat) (f :213 (_ :214 Fin m) -> TT n) (i :211 Fin m)
  extendSubst m n f (FS [m] i) ~> mapVars n (S n) (FS n) (f i)
}

substVars :424 (m :425 Nat) -> (n :426 Nat) -> (_ :427 (_ :428 Fin m) -> TT n) -> (_ :431 TT m) -> TT n {
  forall (m :441 Nat) (n :440 Nat) (f :436 (_ :437 Fin m) -> TT n) (i :434 Fin m)
  substVars m n f (V [m] i) ~> f i
  
  forall (m :457 Nat) (n :456 Nat) (f :452 (_ :453 Fin m) -> TT n) (x :449 TT (S m))
  substVars m n f (Lam [m] x) ~> Lam n (substVars (S m) (S n) (extendSubst m n f) x)
  
  forall (m :484 Nat) (n :483 Nat) (f :479 (_ :480 Fin m) -> TT n) (g :477 TT m) (x :475 TT m)
  substVars m n f (App [m] g x) ~> App n (substVars m n f g) (substVars m n f x)
}

testTm :503 TT (S Z) {
  testTm  ~> App (S Z) (Lam (S Z) (App (S (S Z)) (V (S (S Z)) (FZ (S Z))) (V (S (S Z)) (FS (S Z) (FZ Z))))) (Lam (S Z) (App (S (S Z)) (V (S (S Z)) (FS (S Z) (FZ Z))) (V (S (S Z)) (FZ (S Z)))))
}

example1 :113 TT Z {
  example1  ~> substVars (S Z) Z (env (S Z) Z (VC Z (TT Z) (Lam Z (V (S Z) (FZ Z))) (VN (TT Z)))) testTm
}

substTop :397 (n :398 Nat) -> (_ :399 TT n) -> (_ :401 Fin (S n)) -> TT n {
  forall (n :407 Nat) (tm :405 TT n)
  substTop n tm (FZ [n]) ~> tm
  
  forall (n :416 Nat) (tm :414 TT n) (i :412 Fin n)
  substTop n tm (FS [n] i) ~> V n i
}

redex :355 (m :356 Nat) -> (_ :357 TT m) -> (_ :359 TT m) -> TT m {
  forall (m :367 Nat) (y :364 TT (S m)) (x :362 TT m)
  redex m (Lam [m] y) x ~> nf m (substVars (S m) m (substTop m (nf m x)) y)
  
  forall (m :388 Nat) (f' :386 TT m) (x :384 TT m)
  redex m f' x ~> App m f' (nf m x)
}

nf :315 (m :316 Nat) -> (_ :317 TT m) -> TT m {
  forall (m :322 Nat) (i :320 Fin m)
  nf m (V [m] i) ~> V m i
  
  forall (m :332 Nat) (x :329 TT (S m))
  nf m (Lam [m] x) ~> Lam m (nf (S m) x)
  
  forall (m :346 Nat) (f :344 TT m) (x :342 TT m)
  nf m (App [m] f x) ~> redex m f x
}

example2 :137 TT (S Z) {
  example2  ~> nf (S Z) testTm
}

constructor Result :30 Type.

constructor R :26 (x :R TT Z) -> (y :R TT (S Z)) -> Result.

main :R Result {
  main  ~> R example1 example2
}

Running erasure inference...

########################
# Inferred constraints #
########################

0 ≥ sum
  product []
  product []
  product []
  product [21, 2]
  product [21, 4]
  product []
7 ≥ sum
  product []
  product [237]
  product [37, 4, 21, 2]
  product [37, 2, 21, 4]
13 ≥ sum
  product []
  product [37]
  product [37, 2, 21, 2]
  product [9, 37, 4, 21, 2]
  product [9, 37, 2, 21, 4]
  product [37, 4, 21, 4]
  product [37, 21, 43, 61, 427]
19 ≥ sum
  product []
  product []
  product [2]
  product [4]
  product [43, 61, 427]
  product []
26 ≥ sum
  product []
31 ≥ sum
  product [235, 21]
  product [236, 21]
  product [36]
  product [236]
  product [425, 21]
  product [426, 21]
  product [1]
  product [20, 2]
  product [1, 21, 2]
  product [32, 1, 21, 2]
  product [36, 2, 21, 2]
  product [32, 36, 2, 21, 2]
  product [14, 37, 2, 21, 2]
  product [36, 4, 21, 2]
  product [32, 36, 4, 21, 2]
  product [8, 37, 4, 21, 2]
  product [20, 4]
  product [1, 21, 4]
  product [32, 1, 21, 4]
  product [36, 2, 21, 4]
  product [32, 36, 2, 21, 4]
  product [8, 37, 2, 21, 4]
  product [36, 4, 21, 4]
  product [32, 36, 4, 21, 4]
  product [14, 37, 4, 21, 4]
  product [425]
  product [59, 427]
  product [36, 21, 43, 61, 427]
  product [425, 317]
  product [316, 21]
  product [316]
33 ≥ sum
  product [42, 61, 427]
  product [51, 44, 61, 427]
35 ≥ sum
  product []
  product []
  product [2, 21, 2]
  product [4, 21, 2]
  product [2, 21, 4]
  product [4, 21, 4]
  product [21, 43, 61, 427]
  product []
  product []
40 ≥ sum
  product [61, 427]
50 ≥ sum
  product [44, 61, 427]
57 ≥ sum
  product [32, 1]
  product [32, 20, 2]
  product [32, 32, 1, 21, 2]
  product [32, 32, 36, 2, 21, 2]
  product [32, 14, 37, 2, 21, 2]
  product [32, 32, 36, 4, 21, 2]
  product [32, 8, 37, 4, 21, 2]
  product [14, 9, 37, 4, 21, 2]
  product [32, 20, 4]
  product [32, 32, 1, 21, 4]
  product [32, 32, 36, 2, 21, 4]
  product [32, 8, 37, 2, 21, 4]
  product [14, 9, 37, 2, 21, 4]
  product [32, 32, 36, 4, 21, 4]
  product [32, 14, 37, 4, 21, 4]
  product [32, 425]
  product [426]
  product [32, 59, 427]
  product [60, 427]
  product [41, 61, 427]
  product [34, 42, 61, 427]
  product [20, 43, 61, 427]
  product [32, 36, 21, 43, 61, 427]
  product [14, 37, 21, 43, 61, 427]
  product [34, 51, 44, 61, 427]
  product [32, 316]
58 ≥ sum
  product []
  product [427]
113 ≥ sum
  product [R]
137 ≥ sum
  product [R]
143 ≥ sum
  product [237, 21]
184 ≥ sum
  product [427, 21]
234 ≥ sum
  product [21]
  product [2]
  product [4]
  product []
315 ≥ sum
  product []
  product [399, 427, 317]
  product [4]
  product [21]
  product []
355 ≥ sum
  product []
397 ≥ sum
  product [427, 317]
424 ≥ sum
  product [21]
  product [2]
  product [4]
  product []
  product [317]
503 ≥ sum
  product [431]
  product [317]
18 ~ 15
32 ~ 16
18 ~ 10
18 ~ 11
32 ~ 12
55 ~ 53
56 ~ 52
55 ~ 46
56 ~ 45
55 ~ 48
32 ~ 49
56 ~ 47
18 ~ 38
34 ~ 39
34 ~ 22
32 ~ 23
34 ~ 24
34 ~ 3
34 ~ 5
34 ~ 6
55 ~ 63
56 ~ 62
34 ~ 64
18 ~ 66
34 ~ 67
34 ~ 73
55 ~ 70
56 ~ 69
34 ~ 71
75 ~ product [14, 65]
74 ~ product [60]
72 ~ product [43, 61]
68 ~ product [44, 61]
59 ~ 76
32 ~ 77
60 ~ 78
61 ~ 79
product [61] ≥ sum
  product [L]
41 ~ 80
42 ~ 81
34 ~ 82
43 ~ 83
82 ~ 73
44 ~ 84
45 ~ 69
46 ~ 70
62 ~ 47
63 ~ 48
65 ~ 85
product [65] ≥ sum
  product [L]
14 ~ 86
66 ~ 15
75 ≥ sum
74 ≥ sum
72 ≥ sum
  product []
68 ≥ sum
73 ~ 67
34 ~ 94
55 ~ 91
56 ~ 90
34 ~ 92
18 ~ 88
96 ~ product [8, 65]
95 ~ product [60]
93 ~ product [43, 61]
89 ~ product [44, 61]
87 ~ product [9, 65]
59 ~ 97
32 ~ 98
60 ~ 99
61 ~ 100
product [61] ≥ sum
  product [L]
41 ~ 101
42 ~ 102
34 ~ 103
43 ~ 104
103 ~ 94
44 ~ 105
45 ~ 90
46 ~ 91
62 ~ 47
63 ~ 48
65 ~ 106
product [65] ≥ sum
  product [L]
8 ~ 107
9 ~ 108
10 ~ 88
66 ~ 11
96 ≥ sum
  product [59]
95 ≥ sum
  product [60]
93 ≥ sum
89 ≥ sum
  product [61]
87 ≥ sum
  product [65]
59 ~ 112
60 ~ 111
61 ~ 110
62 ~ 90
63 ~ 91
65 ~ 109
66 ~ 88
67 ~ 67
18 ~ 148
18 ~ 149
18 ~ 151
32 ~ 152
18 ~ 153
32 ~ 154
18 ~ 157
18 ~ 158
160 ~ product [144]
159 ~ product [145]
155 ~ product [146]
144 ~ 161
145 ~ 162
146 ~ 163
147 ~ 156
148 ~ 157
149 ~ 158
150 ~ 164
product [150] ≥ sum
  product [L]
14 ~ 165
151 ~ 15
160 ≥ sum
159 ≥ sum
  product [14]
155 ≥ sum
14 ~ 166
15 ~ 153
18 ~ 171
18 ~ 172
18 ~ 168
174 ~ product [144]
173 ~ product [145]
169 ~ product [146]
167 ~ product [9, 150]
144 ~ 175
145 ~ 176
146 ~ 177
147 ~ 170
148 ~ 171
149 ~ 172
150 ~ 178
product [150] ≥ sum
  product [L]
8 ~ 179
9 ~ 180
10 ~ 168
151 ~ 11
174 ≥ sum
173 ≥ sum
  product [8]
169 ≥ sum
  product [9]
167 ≥ sum
  product [170, 9]
8 ~ 182
9 ~ 181
170 ~ 183
171 ~ 168
10 ~ 172
11 ~ 153
18 ~ 239
18 ~ 240
34 ~ 242
34 ~ 243
18 ~ 248
18 ~ 249
18 ~ 245
251 ~ product [235]
250 ~ product [236]
246 ~ product [237]
244 ~ product [37, 241]
235 ~ 252
236 ~ 253
237 ~ 254
238 ~ 247
239 ~ 248
240 ~ 249
241 ~ 255
product [241] ≥ sum
  product [L]
36 ~ 256
37 ~ 257
38 ~ 245
242 ~ 39
251 ≥ sum
250 ≥ sum
  product [36]
246 ≥ sum
  product [37]
244 ≥ sum
  product [247, 37]
36 ~ 259
37 ~ 258
247 ~ 260
248 ~ 245
38 ~ 249
39 ~ 243
18 ~ 266
18 ~ 267
34 ~ 262
32 ~ 263
269 ~ product [235]
268 ~ product [236]
264 ~ product [237]
261 ~ product [21, 241]
235 ~ 270
236 ~ 271
237 ~ 272
238 ~ 265
239 ~ 266
240 ~ 267
241 ~ 273
product [241] ≥ sum
  product [L]
20 ~ 274
21 ~ 275
22 ~ 262
242 ~ 24
269 ≥ sum
  product [32, 235, 21]
  product [144, 237, 21]
268 ≥ sum
  product [20]
  product [32, 236, 21]
  product [145, 237, 21]
264 ≥ sum
  product [146, 237, 21]
261 ≥ sum
  product [241, 21]
20 ~ 277
21 ~ 276
235 ~ 281
32 ~ 282
236 ~ 280
32 ~ 283
237 ~ 279
144 ~ 286
145 ~ 285
146 ~ 284
147 ~ 265
148 ~ 266
149 ~ 267
238 ~ 150
239 ~ 151
240 ~ 153
241 ~ 278
242 ~ 262
22 ~ 243
24 ~ 243
18 ~ 293
18 ~ 294
34 ~ 290
34 ~ 288
296 ~ product [235]
295 ~ product [236]
291 ~ product [237]
289 ~ product [2, 241]
287 ~ product [4, 241]
235 ~ 297
236 ~ 298
237 ~ 299
238 ~ 292
239 ~ 293
240 ~ 294
241 ~ 300
product [241] ≥ sum
  product [L]
1 ~ 301
2 ~ 302
3 ~ 290
4 ~ 303
5 ~ 288
242 ~ 6
296 ≥ sum
  product [235, 2]
  product [235, 4]
295 ≥ sum
  product [1]
  product [236, 2]
  product [236, 4]
291 ≥ sum
  product [237, 2]
  product [237, 4]
289 ≥ sum
  product [241, 2]
287 ≥ sum
  product [241, 4]
1 ~ 306
2 ~ 305
235 ~ 310
236 ~ 309
237 ~ 308
238 ~ 292
239 ~ 293
240 ~ 294
241 ~ 307
242 ~ 290
3 ~ 243
4 ~ 304
235 ~ 314
236 ~ 313
237 ~ 312
238 ~ 292
239 ~ 293
240 ~ 294
241 ~ 311
242 ~ 288
5 ~ 243
6 ~ 243
18 ~ 189
34 ~ 190
18 ~ 192
32 ~ 193
34 ~ 194
32 ~ 195
18 ~ 198
34 ~ 199
201 ~ product [185]
200 ~ product [186]
196 ~ product [187]
185 ~ 202
186 ~ 203
187 ~ 204
188 ~ 197
189 ~ 198
190 ~ 199
191 ~ 205
product [191] ≥ sum
  product [L]
14 ~ 206
192 ~ 15
201 ≥ sum
200 ≥ sum
  product [32, 36]
  product [14, 37]
196 ≥ sum
36 ~ 208
32 ~ 209
37 ~ 207
14 ~ 210
38 ~ 15
39 ~ 194
18 ~ 215
34 ~ 216
18 ~ 212
218 ~ product [185]
217 ~ product [186]
213 ~ product [187]
211 ~ product [9, 191]
185 ~ 219
186 ~ 220
187 ~ 221
188 ~ 214
189 ~ 215
190 ~ 216
191 ~ 222
product [191] ≥ sum
  product [L]
8 ~ 223
9 ~ 224
10 ~ 212
192 ~ 11
218 ≥ sum
217 ≥ sum
  product [235]
  product [32, 236]
  product [8, 237]
213 ≥ sum
  product [241]
211 ≥ sum
  product [214, 241]
235 ~ 228
236 ~ 227
32 ~ 229
237 ~ 226
8 ~ 230
238 ~ 9
239 ~ 10
240 ~ 11
241 ~ 225
214 ~ 231
215 ~ 212
242 ~ 216
243 ~ 194
18 ~ 429
34 ~ 430
34 ~ 432
34 ~ 433
18 ~ 438
34 ~ 439
18 ~ 435
441 ~ product [425]
440 ~ product [426]
436 ~ product [427]
434 ~ product [37, 431]
425 ~ 442
426 ~ 443
427 ~ 444
428 ~ 437
429 ~ 438
430 ~ 439
431 ~ 445
product [431] ≥ sum
  product [L]
36 ~ 446
37 ~ 447
38 ~ 435
432 ~ 39
441 ≥ sum
440 ≥ sum
436 ≥ sum
  product []
434 ≥ sum
  product [437]
437 ~ 448
438 ~ 435
439 ~ 433
18 ~ 454
34 ~ 455
34 ~ 450
32 ~ 451
457 ~ product [425]
456 ~ product [426]
452 ~ product [427]
449 ~ product [21, 431]
425 ~ 458
426 ~ 459
427 ~ 460
428 ~ 453
429 ~ 454
430 ~ 455
431 ~ 461
product [431] ≥ sum
  product [L]
20 ~ 462
21 ~ 463
22 ~ 450
432 ~ 24
457 ≥ sum
  product [32, 425, 21]
  product [185, 427, 21]
456 ≥ sum
  product [20]
  product [32, 426, 21]
  product [186, 427, 21]
452 ≥ sum
  product [187, 427, 21]
449 ≥ sum
  product [431, 21]
20 ~ 465
21 ~ 464
425 ~ 469
32 ~ 470
426 ~ 468
32 ~ 471
427 ~ 467
185 ~ 474
186 ~ 473
187 ~ 472
188 ~ 453
189 ~ 454
190 ~ 455
428 ~ 191
429 ~ 192
430 ~ 194
431 ~ 466
432 ~ 450
22 ~ 433
24 ~ 433
18 ~ 481
34 ~ 482
34 ~ 478
34 ~ 476
484 ~ product [425]
483 ~ product [426]
479 ~ product [427]
477 ~ product [2, 431]
475 ~ product [4, 431]
425 ~ 485
426 ~ 486
427 ~ 487
428 ~ 480
429 ~ 481
430 ~ 482
431 ~ 488
product [431] ≥ sum
  product [L]
1 ~ 489
2 ~ 490
3 ~ 478
4 ~ 491
5 ~ 476
432 ~ 6
484 ≥ sum
  product [425, 2]
  product [425, 4]
483 ≥ sum
  product [1]
  product [426, 2]
  product [426, 4]
479 ≥ sum
  product [427, 2]
  product [427, 4]
477 ≥ sum
  product [431, 2]
475 ≥ sum
  product [431, 4]
1 ~ 494
2 ~ 493
425 ~ 498
426 ~ 497
427 ~ 496
428 ~ 480
429 ~ 481
430 ~ 482
431 ~ 495
432 ~ 478
3 ~ 433
4 ~ 492
425 ~ 502
426 ~ 501
427 ~ 500
428 ~ 480
429 ~ 481
430 ~ 482
431 ~ 499
432 ~ 476
5 ~ 433
6 ~ 433
34 ~ 504
32 ~ 505
1 ~ 508
32 ~ 509
2 ~ 507
20 ~ 511
32 ~ 512
21 ~ 510
1 ~ 515
32 ~ 516
32 ~ 517
2 ~ 514
36 ~ 519
32 ~ 520
32 ~ 521
37 ~ 518
14 ~ 522
32 ~ 523
38 ~ 15
3 ~ 39
4 ~ 513
36 ~ 525
32 ~ 526
32 ~ 527
37 ~ 524
8 ~ 529
32 ~ 530
9 ~ 528
14 ~ 531
10 ~ 15
38 ~ 11
5 ~ 39
22 ~ 6
3 ~ 24
4 ~ 506
20 ~ 533
32 ~ 534
21 ~ 532
1 ~ 537
32 ~ 538
32 ~ 539
2 ~ 536
36 ~ 541
32 ~ 542
32 ~ 543
37 ~ 540
8 ~ 545
32 ~ 546
9 ~ 544
14 ~ 547
10 ~ 15
38 ~ 11
3 ~ 39
4 ~ 535
36 ~ 549
32 ~ 550
32 ~ 551
37 ~ 548
14 ~ 552
32 ~ 553
38 ~ 15
5 ~ 39
22 ~ 6
5 ~ 24
6 ~ 504
34 ~ 114
425 ~ 118
32 ~ 119
426 ~ 117
427 ~ 116
59 ~ 122
32 ~ 123
60 ~ 121
61 ~ 120
41 ~ 127
42 ~ 126
34 ~ 128
43 ~ 125
20 ~ 130
21 ~ 129
36 ~ 132
32 ~ 133
37 ~ 131
14 ~ 134
38 ~ 15
22 ~ 39
128 ~ 24
44 ~ 124
51 ~ 135
34 ~ 136
45 ~ 52
46 ~ 53
62 ~ 47
63 ~ 48
428 ~ 65
429 ~ 66
430 ~ 67
431 ~ 115
432 ~ 504
433 ~ 114
34 ~ 400
18 ~ 402
32 ~ 403
34 ~ 404
34 ~ 406
407 ~ product [398]
405 ~ product [399]
398 ~ 408
399 ~ 409
400 ~ 406
401 ~ 410
product [401] ≥ sum
  product [L]
14 ~ 411
402 ~ 15
407 ≥ sum
405 ≥ sum
  product []
406 ~ 404
34 ~ 415
18 ~ 413
416 ~ product [398]
414 ~ product [399]
412 ~ product [9, 401]
398 ~ 417
399 ~ 418
400 ~ 415
401 ~ 419
product [401] ≥ sum
  product [L]
8 ~ 420
9 ~ 421
10 ~ 413
402 ~ 11
416 ≥ sum
  product [36]
414 ≥ sum
412 ≥ sum
  product [37]
36 ~ 423
37 ~ 422
38 ~ 413
39 ~ 404
34 ~ 358
34 ~ 360
34 ~ 361
34 ~ 365
32 ~ 366
34 ~ 363
367 ~ product [356]
364 ~ product [21, 357]
362 ~ product [359]
356 ~ 368
357 ~ 369
product [357] ≥ sum
  product [L]
20 ~ 370
21 ~ 371
22 ~ 365
358 ~ 24
359 ~ 372
360 ~ 363
367 ≥ sum
  product [316]
  product [32, 425, 317]
  product [426, 317]
  product [398, 427, 317]
  product [316, 399, 427, 317]
364 ≥ sum
  product [431, 317]
362 ≥ sum
  product [317, 399, 427, 317]
316 ~ 374
317 ~ 373
425 ~ 378
32 ~ 379
426 ~ 377
427 ~ 376
398 ~ 381
399 ~ 380
316 ~ 383
317 ~ 382
318 ~ 363
400 ~ 319
428 ~ 401
429 ~ 402
430 ~ 404
431 ~ 375
432 ~ 365
318 ~ 433
319 ~ 361
34 ~ 387
34 ~ 385
388 ~ product [356]
386 ~ product [357]
384 ~ product [359]
356 ~ 389
357 ~ 390
358 ~ 387
359 ~ 391
360 ~ 385
388 ≥ sum
  product [1]
  product [316, 4]
386 ≥ sum
  product [2]
384 ≥ sum
  product [317, 4]
1 ~ 394
2 ~ 393
3 ~ 387
4 ~ 392
316 ~ 396
317 ~ 395
318 ~ 385
5 ~ 319
6 ~ 361
34 ~ 318
34 ~ 319
18 ~ 321
322 ~ product [316]
320 ~ product [37, 317]
316 ~ 323
317 ~ 324
product [317] ≥ sum
  product [L]
36 ~ 325
37 ~ 326
38 ~ 321
318 ~ 39
322 ≥ sum
  product [36]
320 ≥ sum
  product [37]
36 ~ 328
37 ~ 327
38 ~ 321
39 ~ 319
34 ~ 330
32 ~ 331
332 ~ product [316]
329 ~ product [21, 317]
316 ~ 333
317 ~ 334
product [317] ≥ sum
  product [L]
20 ~ 335
21 ~ 336
22 ~ 330
318 ~ 24
332 ≥ sum
  product [20]
  product [32, 316, 21]
329 ≥ sum
  product [317, 21]
20 ~ 338
21 ~ 337
316 ~ 340
32 ~ 341
317 ~ 339
318 ~ 330
22 ~ 319
24 ~ 319
34 ~ 345
34 ~ 343
346 ~ product [316]
344 ~ product [2, 317]
342 ~ product [4, 317]
316 ~ 347
317 ~ 348
product [317] ≥ sum
  product [L]
1 ~ 349
2 ~ 350
3 ~ 345
4 ~ 351
5 ~ 343
318 ~ 6
346 ≥ sum
  product [356]
344 ≥ sum
  product [357]
342 ≥ sum
  product [359]
356 ~ 354
357 ~ 353
358 ~ 345
359 ~ 352
360 ~ 343
361 ~ 319
34 ~ 138
32 ~ 139
316 ~ 141
32 ~ 142
317 ~ 140
318 ~ 504
319 ~ 138
34 ~ 27
34 ~ 28
32 ~ 29
R ~ 233
27 ~ 114
R ~ 232
28 ~ 138
#######################
# Deferred equalities #
#######################

69 -> TT n ~ TT n
48 -> S m ~ S m
47 -> TT n ~ TT n
15 -> S m ~ S m
90 -> TT n ~ TT n
48 -> S m ~ S m
47 -> TT n ~ TT n
11 -> S m ~ S m
90 -> TT n ~ TT n
15 -> S m ~ S m
153 -> S n ~ S n
11 -> S m ~ S m
153 -> S n ~ S n
262 -> S m ~ S m
151 -> S m ~ S m
153 -> S n ~ S n
262 -> S m ~ S m
243 -> S n ~ S n
15 -> S m ~ S m
15 -> S n ~ S n
194 -> S n ~ S n
11 -> S m ~ S m
11 -> S n ~ S n
194 -> S n ~ S n
450 -> S m ~ S m
192 -> S m ~ S m
194 -> S n ~ S n
450 -> S m ~ S m
433 -> S n ~ S n
15 -> S (S Z) ~ S (S Z)
39 -> S (S Z) ~ S (S Z)
15 -> S Z ~ S Z
11 -> S (S Z) ~ S (S Z)
39 -> S (S Z) ~ S (S Z)
6 -> S (S Z) ~ S (S Z)
24 -> S Z ~ S Z
15 -> S Z ~ S Z
11 -> S (S Z) ~ S (S Z)
39 -> S (S Z) ~ S (S Z)
15 -> S (S Z) ~ S (S Z)
39 -> S (S Z) ~ S (S Z)
6 -> S (S Z) ~ S (S Z)
24 -> S Z ~ S Z
504 -> S Z ~ S Z
15 -> S Z ~ S Z
39 -> S Z ~ S Z
52 -> TT Z ~ TT Z
48 -> S Z ~ S Z
47 -> TT Z ~ TT Z
66 -> S Z ~ S Z
504 -> S Z ~ S Z
15 -> S n ~ S n
11 -> S n ~ S n
365 -> S m ~ S m
402 -> S m ~ S m
365 -> S m ~ S m
330 -> S m ~ S m
330 -> S m ~ S m
319 -> S m ~ S m
504 -> S Z ~ S Z
138 -> S Z ~ S Z
138 -> S Z ~ S Z

  -> iteration 1
    -> No more equalities, fixed point reached.

###################
# Final valuation #
###################

  0 -> R
  1 -> I
  2 -> L
  3 -> I
  4 -> L
  5 -> I
  6 -> I
  7 -> R
  8 -> I
  9 -> L
  10 -> I
  11 -> I
  12 -> I
  13 -> R
  14 -> I
  15 -> I
  16 -> I
  18 -> I
  19 -> R
  20 -> I
  21 -> L
  22 -> I
  23 -> I
  24 -> I
  26 -> L
  27 -> I
  28 -> I
  29 -> I
  31 -> I
  32 -> I
  33 -> I
  34 -> I
  35 -> R
  36 -> I
  37 -> L
  38 -> I
  39 -> I
  40 -> R
  41 -> I
  42 -> I
  43 -> R
  44 -> R
  45 -> I
  46 -> I
  47 -> I
  48 -> I
  49 -> I
  50 -> R
  51 -> I
  52 -> I
  53 -> I
  55 -> I
  56 -> I
  57 -> I
  58 -> R
  59 -> I
  60 -> I
  61 -> R
  62 -> I
  63 -> I
  64 -> I
  65 -> L
  66 -> I
  67 -> I
  68 -> R
  69 -> I
  70 -> I
  71 -> I
  72 -> R
  73 -> I
  74 -> I
  75 -> I
  76 -> I
  77 -> I
  78 -> I
  79 -> I
  80 -> I
  81 -> I
  82 -> I
  83 -> I
  84 -> I
  85 -> L
  86 -> I
  87 -> L
  88 -> I
  89 -> R
  90 -> I
  91 -> I
  92 -> I
  93 -> R
  94 -> I
  95 -> I
  96 -> I
  97 -> I
  98 -> I
  99 -> I
  100 -> I
  101 -> I
  102 -> I
  103 -> I
  104 -> I
  105 -> I
  106 -> L
  107 -> I
  108 -> L
  109 -> L
  110 -> I
  111 -> I
  112 -> I
  113 -> R
  114 -> I
  115 -> L
  116 -> I
  117 -> I
  118 -> I
  119 -> I
  120 -> I
  121 -> I
  122 -> I
  123 -> I
  124 -> I
  125 -> I
  126 -> I
  127 -> I
  128 -> I
  129 -> L
  130 -> I
  131 -> L
  132 -> I
  133 -> I
  134 -> I
  135 -> I
  136 -> I
  137 -> R
  138 -> I
  139 -> I
  140 -> L
  141 -> I
  142 -> I
  143 -> L
  144 -> I
  145 -> I
  146 -> R
  147 -> L
  148 -> I
  149 -> I
  150 -> L
  151 -> I
  152 -> I
  153 -> I
  154 -> I
  155 -> R
  156 -> L
  157 -> I
  158 -> I
  159 -> I
  160 -> I
  161 -> I
  162 -> I
  163 -> I
  164 -> L
  165 -> I
  166 -> I
  167 -> L
  168 -> I
  169 -> R
  170 -> L
  171 -> I
  172 -> I
  173 -> I
  174 -> I
  175 -> I
  176 -> I
  177 -> I
  178 -> L
  179 -> I
  180 -> L
  181 -> L
  182 -> I
  183 -> L
  184 -> L
  185 -> I
  186 -> I
  187 -> R
  188 -> L
  189 -> I
  190 -> I
  191 -> L
  192 -> I
  193 -> I
  194 -> I
  195 -> I
  196 -> R
  197 -> L
  198 -> I
  199 -> I
  200 -> I
  201 -> I
  202 -> I
  203 -> I
  204 -> I
  205 -> L
  206 -> I
  207 -> L
  208 -> I
  209 -> I
  210 -> I
  211 -> L
  212 -> I
  213 -> R
  214 -> L
  215 -> I
  216 -> I
  217 -> I
  218 -> I
  219 -> I
  220 -> I
  221 -> I
  222 -> L
  223 -> I
  224 -> L
  225 -> L
  226 -> I
  227 -> I
  228 -> I
  229 -> I
  230 -> I
  231 -> L
  232 -> I
  233 -> I
  234 -> R
  235 -> I
  236 -> I
  237 -> R
  238 -> L
  239 -> I
  240 -> I
  241 -> L
  242 -> I
  243 -> I
  244 -> L
  245 -> I
  246 -> R
  247 -> L
  248 -> I
  249 -> I
  250 -> I
  251 -> I
  252 -> I
  253 -> I
  254 -> I
  255 -> L
  256 -> I
  257 -> L
  258 -> L
  259 -> I
  260 -> L
  261 -> L
  262 -> I
  263 -> I
  264 -> R
  265 -> L
  266 -> I
  267 -> I
  268 -> I
  269 -> I
  270 -> I
  271 -> I
  272 -> I
  273 -> L
  274 -> I
  275 -> L
  276 -> L
  277 -> I
  278 -> L
  279 -> I
  280 -> I
  281 -> I
  282 -> I
  283 -> I
  284 -> I
  285 -> I
  286 -> I
  287 -> L
  288 -> I
  289 -> L
  290 -> I
  291 -> R
  292 -> L
  293 -> I
  294 -> I
  295 -> I
  296 -> I
  297 -> I
  298 -> I
  299 -> I
  300 -> L
  301 -> I
  302 -> L
  303 -> L
  304 -> L
  305 -> L
  306 -> I
  307 -> L
  308 -> I
  309 -> I
  310 -> I
  311 -> L
  312 -> I
  313 -> I
  314 -> I
  315 -> R
  316 -> I
  317 -> L
  318 -> I
  319 -> I
  320 -> L
  321 -> I
  322 -> I
  323 -> I
  324 -> L
  325 -> I
  326 -> L
  327 -> L
  328 -> I
  329 -> L
  330 -> I
  331 -> I
  332 -> I
  333 -> I
  334 -> L
  335 -> I
  336 -> L
  337 -> L
  338 -> I
  339 -> L
  340 -> I
  341 -> I
  342 -> L
  343 -> I
  344 -> L
  345 -> I
  346 -> I
  347 -> I
  348 -> L
  349 -> I
  350 -> L
  351 -> L
  352 -> L
  353 -> L
  354 -> I
  355 -> L
  356 -> I
  357 -> L
  358 -> I
  359 -> L
  360 -> I
  361 -> I
  362 -> L
  363 -> I
  364 -> L
  365 -> I
  366 -> I
  367 -> I
  368 -> I
  369 -> L
  370 -> I
  371 -> L
  372 -> L
  373 -> L
  374 -> I
  375 -> L
  376 -> I
  377 -> I
  378 -> I
  379 -> I
  380 -> I
  381 -> I
  382 -> L
  383 -> I
  384 -> L
  385 -> I
  386 -> L
  387 -> I
  388 -> I
  389 -> I
  390 -> L
  391 -> L
  392 -> L
  393 -> L
  394 -> I
  395 -> L
  396 -> I
  397 -> L
  398 -> I
  399 -> R
  400 -> I
  401 -> L
  402 -> I
  403 -> I
  404 -> I
  405 -> R
  406 -> I
  407 -> I
  408 -> I
  409 -> I
  410 -> L
  411 -> I
  412 -> L
  413 -> I
  414 -> R
  415 -> I
  416 -> I
  417 -> I
  418 -> I
  419 -> L
  420 -> I
  421 -> L
  422 -> L
  423 -> I
  424 -> R
  425 -> I
  426 -> I
  427 -> R
  428 -> L
  429 -> I
  430 -> I
  431 -> L
  432 -> I
  433 -> I
  434 -> L
  435 -> I
  436 -> R
  437 -> L
  438 -> I
  439 -> I
  440 -> I
  441 -> I
  442 -> I
  443 -> I
  444 -> I
  445 -> L
  446 -> I
  447 -> L
  448 -> L
  449 -> L
  450 -> I
  451 -> I
  452 -> R
  453 -> L
  454 -> I
  455 -> I
  456 -> I
  457 -> I
  458 -> I
  459 -> I
  460 -> I
  461 -> L
  462 -> I
  463 -> L
  464 -> L
  465 -> I
  466 -> L
  467 -> I
  468 -> I
  469 -> I
  470 -> I
  471 -> I
  472 -> I
  473 -> I
  474 -> I
  475 -> L
  476 -> I
  477 -> L
  478 -> I
  479 -> R
  480 -> L
  481 -> I
  482 -> I
  483 -> I
  484 -> I
  485 -> I
  486 -> I
  487 -> I
  488 -> L
  489 -> I
  490 -> L
  491 -> L
  492 -> L
  493 -> L
  494 -> I
  495 -> L
  496 -> I
  497 -> I
  498 -> I
  499 -> L
  500 -> I
  501 -> I
  502 -> I
  503 -> R
  504 -> I
  505 -> I
  506 -> L
  507 -> L
  508 -> I
  509 -> I
  510 -> L
  511 -> I
  512 -> I
  513 -> L
  514 -> L
  515 -> I
  516 -> I
  517 -> I
  518 -> L
  519 -> I
  520 -> I
  521 -> I
  522 -> I
  523 -> I
  524 -> L
  525 -> I
  526 -> I
  527 -> I
  528 -> L
  529 -> I
  530 -> I
  531 -> I
  532 -> L
  533 -> I
  534 -> I
  535 -> L
  536 -> L
  537 -> I
  538 -> I
  539 -> I
  540 -> L
  541 -> I
  542 -> I
  543 -> I
  544 -> L
  545 -> I
  546 -> I
  547 -> I
  548 -> L
  549 -> I
  550 -> I
  551 -> I
  552 -> I
  553 -> I

#####################
# Annotated program #
#####################

constructor Nat :I Type.

constructor Z :I Nat.

constructor S :I (n :I Nat) -> Nat.

constructor Fin :I (_ :I Nat) -> Type.

constructor FZ :R (n :I Nat) -> Fin (S n).

constructor FS :R (n :I Nat) -> (_ :L Fin n) -> Fin (S n).

constructor Vect :I (_ :I Nat) -> (_ :I Type) -> Type.

constructor VN :R (a :I Type) -> Vect Z a.

constructor VC :R (n :I Nat) -> (a :I Type) -> (_ :R a) -> (_ :R Vect n a) -> Vect (S n) a.

constructor TT :I (_ :I Nat) -> Type.

constructor V :R (n :I Nat) -> (_ :L Fin n) -> TT n.

constructor Lam :R (n :I Nat) -> (_ :L TT (S n)) -> TT n.

constructor App :R (n :I Nat) -> (_ :L TT n) -> (_ :L TT n) -> TT n.

env :R (m :I Nat) -> (n :I Nat) -> (_ :R Vect m (TT n)) -> (_ :L Fin m) -> TT n {
  forall (m :I Nat) (n :I Nat) (x :R TT n) (xs :R Vect m (TT n))
  env [S m] n (VC [m] [TT n] x xs) (FZ m) ~> x
  
  forall (m :I Nat) (n :I Nat) (x :R TT n) (xs :R Vect m (TT n)) (i :L Fin m)
  env [S m] n (VC [m] [TT n] x xs) (FS m i) ~> env m n xs i
}

extendMap :L (m :I Nat) -> (n :I Nat) -> (_ :R (_ :L Fin m) -> Fin n) -> (_ :L Fin (S m)) -> Fin (S n) {
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> Fin n)
  extendMap m n f (FZ [m]) ~> FZ n
  
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> Fin n) (i :L Fin m)
  extendMap m n f (FS [m] i) ~> FS n (f i)
}

mapVars :R (m :I Nat) -> (n :I Nat) -> (_ :R (_ :L Fin m) -> Fin n) -> (_ :L TT m) -> TT n {
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> Fin n) (i :L Fin m)
  mapVars m n f (V [m] i) ~> V n (f i)
  
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> Fin n) (x :L TT (S m))
  mapVars m n f (Lam [m] x) ~> Lam n (mapVars (S m) (S n) (extendMap m n f) x)
  
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> Fin n) (g :L TT m) (x :L TT m)
  mapVars m n f (App [m] g x) ~> App n (mapVars m n f g) (mapVars m n f x)
}

extendSubst :L (m :I Nat) -> (n :I Nat) -> (_ :R (_ :L Fin m) -> TT n) -> (_ :L Fin (S m)) -> TT (S n) {
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> TT n)
  extendSubst m n f (FZ [m]) ~> V (S n) (FZ n)
  
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> TT n) (i :L Fin m)
  extendSubst m n f (FS [m] i) ~> mapVars n (S n) (FS n) (f i)
}

substVars :R (m :I Nat) -> (n :I Nat) -> (_ :R (_ :L Fin m) -> TT n) -> (_ :L TT m) -> TT n {
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> TT n) (i :L Fin m)
  substVars m n f (V [m] i) ~> f i
  
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> TT n) (x :L TT (S m))
  substVars m n f (Lam [m] x) ~> Lam n (substVars (S m) (S n) (extendSubst m n f) x)
  
  forall (m :I Nat) (n :I Nat) (f :R (_ :L Fin m) -> TT n) (g :L TT m) (x :L TT m)
  substVars m n f (App [m] g x) ~> App n (substVars m n f g) (substVars m n f x)
}

testTm :R TT (S Z) {
  testTm  ~> App (S Z) (Lam (S Z) (App (S (S Z)) (V (S (S Z)) (FZ (S Z))) (V (S (S Z)) (FS (S Z) (FZ Z))))) (Lam (S Z) (App (S (S Z)) (V (S (S Z)) (FS (S Z) (FZ Z))) (V (S (S Z)) (FZ (S Z)))))
}

example1 :R TT Z {
  example1  ~> substVars (S Z) Z (env (S Z) Z (VC Z (TT Z) (Lam Z (V (S Z) (FZ Z))) (VN (TT Z)))) testTm
}

substTop :L (n :I Nat) -> (_ :R TT n) -> (_ :L Fin (S n)) -> TT n {
  forall (n :I Nat) (tm :R TT n)
  substTop n tm (FZ [n]) ~> tm
  
  forall (n :I Nat) (tm :R TT n) (i :L Fin n)
  substTop n tm (FS [n] i) ~> V n i
}

redex :L (m :I Nat) -> (_ :L TT m) -> (_ :L TT m) -> TT m {
  forall (m :I Nat) (y :L TT (S m)) (x :L TT m)
  redex m (Lam [m] y) x ~> nf m (substVars (S m) m (substTop m (nf m x)) y)
  
  forall (m :I Nat) (f' :L TT m) (x :L TT m)
  redex m f' x ~> App m f' (nf m x)
}

nf :R (m :I Nat) -> (_ :L TT m) -> TT m {
  forall (m :I Nat) (i :L Fin m)
  nf m (V [m] i) ~> V m i
  
  forall (m :I Nat) (x :L TT (S m))
  nf m (Lam [m] x) ~> Lam m (nf (S m) x)
  
  forall (m :I Nat) (f :L TT m) (x :L TT m)
  nf m (App [m] f x) ~> redex m f x
}

example2 :R TT (S Z) {
  example2  ~> nf (S Z) testTm
}

constructor Result :I Type.

constructor R :L (x :R TT Z) -> (y :R TT (S Z)) -> Result.

main :R Result {
  main  ~> R example1 example2
}

###############
# Final check #
###############

##########
# Erased #
##########

constructor FZ : Fin.

constructor FS : (_) -> Fin.

constructor VN : Vect.

constructor VC : (_) -> (_) -> Vect.

constructor V : (_) -> TT.

constructor Lam : (_) -> TT.

constructor App : (_) -> (_) -> TT.

env : (_) -> (_) -> TT {
  forall (x) (xs)
  env FZ ~> x
  
  forall (x) (xs) (i)
  env (FS i) ~> env i
}

extendMap : (_) -> (_) -> Fin {
  forall (f)
  extendMap FZ ~> FZ
  
  forall (f) (i)
  extendMap (FS i) ~> FS (f i)
}

mapVars : (_) -> (_) -> TT {
  forall (f) (i)
  mapVars (V i) ~> V (f i)
  
  forall (f) (x)
  mapVars (Lam x) ~> Lam (mapVars x)
  
  forall (f) (g) (x)
  mapVars (App g x) ~> App (mapVars g) (mapVars x)
}

extendSubst : (_) -> (_) -> TT {
  forall (f)
  extendSubst FZ ~> V FZ
  
  forall (f) (i)
  extendSubst (FS i) ~> mapVars (f i)
}

substVars : (_) -> (_) -> TT {
  forall (f) (i)
  substVars (V i) ~> f i
  
  forall (f) (x)
  substVars (Lam x) ~> Lam (substVars x)
  
  forall (f) (g) (x)
  substVars (App g x) ~> App (substVars g) (substVars x)
}

testTm : TT {
  testTm  ~> App (Lam (App (V FZ) (V (FS FZ)))) (Lam (App (V (FS FZ)) (V FZ)))
}

example1 : TT {
  example1  ~> substVars testTm
}

substTop : (_) -> (_) -> TT {
  forall (tm)
  substTop FZ ~> tm
  
  forall (tm) (i)
  substTop (FS i) ~> V i
}

redex : (_) -> (_) -> TT {
  forall (y) (x)
  redex (Lam y) x ~> nf (substVars y)
  
  forall (f') (x)
  redex f' x ~> App f' (nf x)
}

nf : (_) -> TT {
  forall (i)
  nf (V i) ~> V i
  
  forall (x)
  nf (Lam x) ~> Lam (nf x)
  
  forall (f) (x)
  nf (App f x) ~> redex f x
}

example2 : TT {
  example2  ~> nf testTm
}

constructor R : (x) -> (y) -> Result.

main : Result {
  main  ~> R
}

################
# NF of `main` #
################

Unerased, reduced:
R (App Z (Lam Z (App (S Z) (V (S Z) (FZ Z)) (Lam (S Z) (V (S (S Z)) (FZ (S Z)))))) (Lam Z (App (S Z) (Lam (S Z) (V (S (S Z)) (FZ (S Z)))) (V (S Z) (FZ Z))))) (App (S Z) (V (S Z) (FZ Z)) (V (S Z) (FZ Z)))

Erased, reduced:
R
